
/*
 * This file was generated by the SOM Compiler.
 * FileName: garage.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.3
 *     SOM Emitter emitxh: 2.41
 */

/*
 * Currently, a Garage will transiently store cars in a garage
 */


#ifndef SOM_Garage_xh
#define SOM_Garage_xh

class Garage;

#define Garage_MajorVersion 0
#define Garage_MinorVersion 0

/*
 * Passthru lines: File: "C.xh", "before"
 */
#include "Ticket.xh"
#include "Car.xh"
#include <iostream.h>

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_SOMObject_xh
#include <somobj.xh>
#endif

#ifndef Garage_API
#define Garage_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class Ticket;
#define ex_Garage_CarMissing "::Garage::CarMissing"
typedef
struct Garage_CarMissing {
long  errorCode;
char  reason[80];
} Garage_CarMissing;
#define Garage_PARKING_SPACES 10000 /* 10000 */
#ifndef _IDL_SEQUENCE_Car_defined
#define _IDL_SEQUENCE_Car_defined
typedef struct {
    unsigned long _maximum;
    unsigned long _length;
    Car **_buffer;
} _IDL_SEQUENCE_Car;
#endif /* _IDL_SEQUENCE_Car_defined */ 

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_ex_CarMissing
    #ifdef ex_CarMissing
        #undef ex_CarMissing
        #define SOMTGD_ex_CarMissing 1
    #else
        #define ex_CarMissing ex_Garage_CarMissing
    #endif /* ex_CarMissing */
#endif /* SOMTGD_ex_CarMissing */
#ifndef SOMTGD_CarMissing
    #ifdef CarMissing
        #undef CarMissing
        #define SOMTGD_CarMissing 1
    #else
        #define CarMissing Garage_CarMissing
    #endif /* CarMissing */
#endif /* SOMTGD_CarMissing */
#ifndef SOMTGD_PARKING_SPACES
    #ifdef PARKING_SPACES
        #undef PARKING_SPACES
        #define SOMTGD_PARKING_SPACES 1
    #else
        #define PARKING_SPACES Garage_PARKING_SPACES
    #endif /* PARKING_SPACES */
#endif /* SOMTGD_PARKING_SPACES */
#endif /* SOM_DONT_USE_SHORT_NAMES */

/*
 * End of user-defined types.
 */

/* A procedure to create the Garage Class */
SOMEXTERN SOMClass * SOMLINK GarageNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the Garage class object, and the methods it introduces. */
SOMEXTERN struct GarageClassDataStructure {
	SOMClass *classObject;
	somMToken storeCar;
	somMToken removeCar;
	somMToken getCarCount;
	somMToken listCars;
	somMToken getAvailableParkingSlot;
	somMToken removeAllCars;
	somMToken _get_garage_lot;
	somMToken _set_garage_lot;
} SOMDLINK GarageClassData;
#define _Garage GarageClassData.classObject

/* The API to parentMtabs for Garage, and the instance data it introduces. */
SOMEXTERN struct GarageCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK GarageCClassData;

/*
 * -- Typedefs for Garage Method Procedures
 */
SOMEXTERN {
typedef _IDL_SEQUENCE_Car   (SOMLINK * somTD_Garage__get_garage_lot)(Garage *somSelf, Environment *ev);
typedef void   (SOMLINK * somTD_Garage__set_garage_lot)(Garage *somSelf, Environment *ev,
		_IDL_SEQUENCE_Car* garage_lot);
typedef void   (SOMLINK * somTD_Garage_storeCar)(Garage *somSelf, Environment *ev,
		Car* aCar,
		Ticket* aTicket);
typedef Car*   (SOMLINK * somTD_Garage_removeCar)(Garage *somSelf, Environment *ev,
		Ticket* aTicket);
typedef void   (SOMLINK * somTD_Garage_listCars)(Garage *somSelf, Environment *ev);
typedef long   (SOMLINK * somTD_Garage_getCarCount)(Garage *somSelf, Environment *ev);
typedef long   (SOMLINK * somTD_Garage_getAvailableParkingSlot)(Garage *somSelf, Environment *ev);
typedef void   (SOMLINK * somTD_Garage_removeAllCars)(Garage *somSelf, Environment *ev);

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef void   (SOMLINK * somTD_Garage_somDefaultInit)(Garage *somSelf,
		somInitCtrl* ctrl);
typedef void   (SOMLINK * somTD_Garage_somDestruct)(Garage *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef void   (SOMLINK * somTD_Garage_somDefaultCopyInit)(Garage *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef Garage*   (SOMLINK * somTD_Garage_somDefaultAssign)(Garage *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_Garage_somDefaultConstCopyInit)(Garage *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_Garage_somDefaultVCopyInit)(Garage *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_Garage_somDefaultConstVCopyInit)(Garage *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef Garage*   (SOMLINK * somTD_Garage_somDefaultConstAssign)(Garage *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef Garage*   (SOMLINK * somTD_Garage_somDefaultVAssign)(Garage *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef Garage*   (SOMLINK * somTD_Garage_somDefaultConstVAssign)(Garage *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_Garage_somInit)(Garage *somSelf);
typedef void   (SOMLINK * somTD_Garage_somFree)(Garage *somSelf);
typedef void   (SOMLINK * somTD_Garage_somUninit)(Garage *somSelf);
typedef SOMClass*   (SOMLINK * somTD_Garage_somGetClass)(Garage *somSelf);
typedef string   (SOMLINK * somTD_Garage_somGetClassName)(Garage *somSelf);
typedef long   (SOMLINK * somTD_Garage_somGetSize)(Garage *somSelf);
typedef boolean   (SOMLINK * somTD_Garage_somIsA)(Garage *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_Garage_somIsInstanceOf)(Garage *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_Garage_somRespondsTo)(Garage *somSelf,
		somId mId);
typedef boolean   (SOMLINK * somTD_Garage_somDispatch)(Garage *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_Garage_somClassDispatch)(Garage *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_Garage_somCastObj)(Garage *somSelf,
		SOMClass* cls);
typedef boolean   (SOMLINK * somTD_Garage_somResetObj)(Garage *somSelf);
typedef void   (SOMLINK * somTD_Garage_somDispatchV)(Garage *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef long   (SOMLINK * somTD_Garage_somDispatchL)(Garage *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef void*   (SOMLINK * somTD_Garage_somDispatchA)(Garage *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef double   (SOMLINK * somTD_Garage_somDispatchD)(Garage *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef SOMObject*   (SOMLINK * somTD_Garage_somPrintSelf)(Garage *somSelf);
typedef void   (SOMLINK * somTD_Garage_somDumpSelf)(Garage *somSelf,
		long level);
typedef void   (SOMLINK * somTD_Garage_somDumpSelfInt)(Garage *somSelf,
		long level);
}

#endif /* Garage_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for Garage
 */
class Garage : public SOMObject
{
public:

// Garage::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t size)
{
   SOM_IgnoreWarning(size);
   if (!_Garage) GarageNewClass(Garage_MajorVersion,Garage_MinorVersion);
   return (void*)
      SOM_Resolve(_Garage,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_Garage));
}

// Garage::delete uses the default deallocator for the object's class.
void operator delete(void * obj)
{
   somToken objCls = obj ? *(void**)obj : (somToken) NULL;
   if (somIsObj(objCls)) {
      SOM_Resolve(objCls,SOMClass,somDeallocate)
         ((SOMClass*)objCls, (string)obj);
   }
}

Garage()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (GarageCClassData.parentMtab))->mtab)
      return;
   somDefaultInit(0);
}

Garage(Garage* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (GarageCClassData.parentMtab))->mtab)
      return;
   somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

Garage(const Garage* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (GarageCClassData.parentMtab))->mtab)
      return;
   somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

~Garage()
{
   if (!somIsObj(this)) return;
   somDestruct(0,0);
   *(void**)this = **(void***)this;
}


/* method: _get_garage_lot */
_IDL_SEQUENCE_Car   _get_garage_lot(Environment *ev)
{
   return SOM_ResolveD(this,Garage,Garage,_get_garage_lot)
	(this, ev);
}


/* method: _set_garage_lot */
void   _set_garage_lot(Environment *ev,
		_IDL_SEQUENCE_Car* garage_lot)
{
   SOM_ResolveD(this,Garage,Garage,_set_garage_lot)
	(this, ev,garage_lot);
}


/* method: storeCar */
void   storeCar(Environment *ev,
		Car* aCar,
		Ticket* aTicket)
{
   SOM_ResolveD(this,Garage,Garage,storeCar)
	(this, ev,aCar,aTicket);
}


/* method: removeCar */
Car*   removeCar(Environment *ev,
		Ticket* aTicket)
{
   return SOM_ResolveD(this,Garage,Garage,removeCar)
	(this, ev,aTicket);
}


/* method: listCars */
void   listCars(Environment *ev)
{
   SOM_ResolveD(this,Garage,Garage,listCars)
	(this, ev);
}


/* method: getCarCount */
long   getCarCount(Environment *ev)
{
   return SOM_ResolveD(this,Garage,Garage,getCarCount)
	(this, ev);
}


/* method: getAvailableParkingSlot */
long   getAvailableParkingSlot(Environment *ev)
{
   return SOM_ResolveD(this,Garage,Garage,getAvailableParkingSlot)
	(this, ev);
}


/* method: removeAllCars */
void   removeAllCars(Environment *ev)
{
   SOM_ResolveD(this,Garage,Garage,removeAllCars)
	(this, ev);
}


/*
 * Reintroduce inherited methods
 */

/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,Garage,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,Garage,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,Garage,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
Garage*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,Garage,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,Garage,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,Garage,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,Garage,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
Garage*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,Garage,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
Garage*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,Garage,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
Garage*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,Garage,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,Garage,SOMObject,somInit)
	(this);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,Garage,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,Garage,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,Garage,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,Garage,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,Garage,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,Garage,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,Garage,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,Garage,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   Garage_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,Garage,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,Garage,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   Garage_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,Garage,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,Garage,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,Garage,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,Garage,SOMObject,somResetObj)
	(this);
}


/* va_list method: somDispatchV */
/* the va_list invocation form */
void   Garage_somDispatchV(somId methodId,
		somId descriptor,
		va_list ap)
{
   SOM_ResolveD(this,Garage,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void   somDispatchV(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   SOM_ResolveD(this,Garage,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
   va_end(ap);
}


/* va_list method: somDispatchL */
/* the va_list invocation form */
long   Garage_somDispatchL(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,Garage,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
long   somDispatchL(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   long __somResult = 
      SOM_ResolveD(this,Garage,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchA */
/* the va_list invocation form */
void*   Garage_somDispatchA(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,Garage,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void*   somDispatchA(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   void* __somResult = 
      SOM_ResolveD(this,Garage,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchD */
/* the va_list invocation form */
double   Garage_somDispatchD(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,Garage,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
double   somDispatchD(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   double __somResult = 
      SOM_ResolveD(this,Garage,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,Garage,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,Garage,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,Garage,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* Garage */



#endif       /* SOM_Garage_xh */
