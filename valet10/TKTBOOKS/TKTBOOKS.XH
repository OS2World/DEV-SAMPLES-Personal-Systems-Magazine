
/*
 * This file was generated by the SOM Compiler.
 * FileName: tktbooks.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.3
 *     SOM Emitter emitxh: 2.41
 */

#ifndef SOM_TktBookS_xh
#define SOM_TktBookS_xh

class TktBookS;

#define TktBookS_MajorVersion 0
#define TktBookS_MinorVersion 0

/*
 * Passthru lines: File: "C.xh", "before"
 */
#include <ticket.xh>
#include <garage.xh>

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_SOMObject_xh
#include <somobj.xh>
#endif

#ifndef TktBookS_API
#define TktBookS_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMClass;
class SOMObject;
class Ticket;
class Garage;

/*
 * End of user-defined types.
 */

/* A procedure to create the TktBookS Class */
SOMEXTERN SOMClass * SOMLINK TktBookSNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the TktBookS class object, and the methods it introduces. */
SOMEXTERN struct TktBookSClassDataStructure {
	SOMClass *classObject;
	somMToken deleteTicket;
	somMToken getTicket;
} SOMDLINK TktBookSClassData;
#define _TktBookS TktBookSClassData.classObject

/* The API to parentMtabs for TktBookS, and the instance data it introduces. */
SOMEXTERN struct TktBookSCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK TktBookSCClassData;

/*
 * -- Typedefs for TktBookS Method Procedures
 */
SOMEXTERN {
typedef Ticket*   (SOMLINK * somTD_TktBookS_getTicket)(TktBookS *somSelf, Environment *ev,
		Garage* aGarage);

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef void   (SOMLINK * somTD_TktBookS_somDefaultInit)(TktBookS *somSelf,
		somInitCtrl* ctrl);
typedef void   (SOMLINK * somTD_TktBookS_somDestruct)(TktBookS *somSelf,
		octet doFree,
		somDestructCtrl* ctrl);
typedef void   (SOMLINK * somTD_TktBookS_somDefaultCopyInit)(TktBookS *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef TktBookS*   (SOMLINK * somTD_TktBookS_somDefaultAssign)(TktBookS *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_TktBookS_somDefaultConstCopyInit)(TktBookS *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_TktBookS_somDefaultVCopyInit)(TktBookS *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_TktBookS_somDefaultConstVCopyInit)(TktBookS *somSelf,
		somInitCtrl* ctrl,
		SOMObject* fromObj);
typedef TktBookS*   (SOMLINK * somTD_TktBookS_somDefaultConstAssign)(TktBookS *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef TktBookS*   (SOMLINK * somTD_TktBookS_somDefaultVAssign)(TktBookS *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef TktBookS*   (SOMLINK * somTD_TktBookS_somDefaultConstVAssign)(TktBookS *somSelf,
		somAssignCtrl* ctrl,
		SOMObject* fromObj);
typedef void   (SOMLINK * somTD_TktBookS_somInit)(TktBookS *somSelf);
typedef void   (SOMLINK * somTD_TktBookS_somFree)(TktBookS *somSelf);
typedef void   (SOMLINK * somTD_TktBookS_somUninit)(TktBookS *somSelf);
typedef SOMClass*   (SOMLINK * somTD_TktBookS_somGetClass)(TktBookS *somSelf);
typedef string   (SOMLINK * somTD_TktBookS_somGetClassName)(TktBookS *somSelf);
typedef long   (SOMLINK * somTD_TktBookS_somGetSize)(TktBookS *somSelf);
typedef boolean   (SOMLINK * somTD_TktBookS_somIsA)(TktBookS *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_TktBookS_somIsInstanceOf)(TktBookS *somSelf,
		SOMClass* aClassObj);
typedef boolean   (SOMLINK * somTD_TktBookS_somRespondsTo)(TktBookS *somSelf,
		somId mId);
typedef boolean   (SOMLINK * somTD_TktBookS_somDispatch)(TktBookS *somSelf,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_TktBookS_somClassDispatch)(TktBookS *somSelf,
		SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap);
typedef boolean   (SOMLINK * somTD_TktBookS_somCastObj)(TktBookS *somSelf,
		SOMClass* cls);
typedef boolean   (SOMLINK * somTD_TktBookS_somResetObj)(TktBookS *somSelf);
typedef void   (SOMLINK * somTD_TktBookS_somDispatchV)(TktBookS *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef long   (SOMLINK * somTD_TktBookS_somDispatchL)(TktBookS *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef void*   (SOMLINK * somTD_TktBookS_somDispatchA)(TktBookS *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef double   (SOMLINK * somTD_TktBookS_somDispatchD)(TktBookS *somSelf,
		somId methodId,
		somId descriptor,
		va_list ap);
typedef SOMObject*   (SOMLINK * somTD_TktBookS_somPrintSelf)(TktBookS *somSelf);
typedef void   (SOMLINK * somTD_TktBookS_somDumpSelf)(TktBookS *somSelf,
		long level);
typedef void   (SOMLINK * somTD_TktBookS_somDumpSelfInt)(TktBookS *somSelf,
		long level);
}

#endif /* TktBookS_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for TktBookS
 */
class TktBookS : public SOMObject
{
public:

// TktBookS::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t size)
{
   SOM_IgnoreWarning(size);
   if (!_TktBookS) TktBookSNewClass(TktBookS_MajorVersion,TktBookS_MinorVersion);
   return (void*)
      SOM_Resolve(_TktBookS,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_TktBookS));
}

// TktBookS::delete uses the default deallocator for the object's class.
void operator delete(void * obj)
{
   somToken objCls = obj ? *(void**)obj : (somToken) NULL;
   if (somIsObj(objCls)) {
      SOM_Resolve(objCls,SOMClass,somDeallocate)
         ((SOMClass*)objCls, (string)obj);
   }
}

TktBookS()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (TktBookSCClassData.parentMtab))->mtab)
      return;
   somDefaultInit(0);
}

TktBookS(TktBookS* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (TktBookSCClassData.parentMtab))->mtab)
      return;
   somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

TktBookS(const TktBookS* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (TktBookSCClassData.parentMtab))->mtab)
      return;
   somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}

~TktBookS()
{
   if (!somIsObj(this)) return;
   somDestruct(0,0);
   *(void**)this = **(void***)this;
}


/* method: getTicket */
Ticket*   getTicket(Environment *ev,
		Garage* aGarage)
{
   return SOM_ResolveD(this,TktBookS,TktBookS,getTicket)
	(this, ev,aGarage);
}


/*
 * Reintroduce inherited methods
 */

/* initializer method: somDefaultInit */
void   somDefaultInit(somInitCtrl* ctrl)
{
   SOM_ResolveD(this,TktBookS,SOMObject,somDefaultInit)
	(this,ctrl);
}


/* method: somDestruct */
void   somDestruct(octet doFree,
		somDestructCtrl* ctrl)
{
   SOM_ResolveD(this,TktBookS,SOMObject,somDestruct)
	(this,doFree,ctrl);
}


/* method: somDefaultCopyInit */
void   somDefaultCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,TktBookS,SOMObject,somDefaultCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultAssign */
TktBookS*  somDefaultAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,TktBookS,SOMObject,somDefaultAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstCopyInit */
void   somDefaultConstCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,TktBookS,SOMObject,somDefaultConstCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultVCopyInit */
void   somDefaultVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,TktBookS,SOMObject,somDefaultVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVCopyInit */
void   somDefaultConstVCopyInit(somInitCtrl* ctrl,
		SOMObject* fromObj)
{
   SOM_ResolveD(this,TktBookS,SOMObject,somDefaultConstVCopyInit)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstAssign */
TktBookS*  somDefaultConstAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,TktBookS,SOMObject,somDefaultConstAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultVAssign */
TktBookS*  somDefaultVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,TktBookS,SOMObject,somDefaultVAssign)
	(this,ctrl,fromObj);
}


/* method: somDefaultConstVAssign */
TktBookS*  somDefaultConstVAssign(somAssignCtrl* ctrl,
		SOMObject* fromObj)
{
   return SOM_ResolveD(this,TktBookS,SOMObject,somDefaultConstVAssign)
	(this,ctrl,fromObj);
}


/* method: somInit */
void   somInit()
{
   SOM_ResolveD(this,TktBookS,SOMObject,somInit)
	(this);
}


/* method: somFree */
void   somFree()
{
   SOM_ResolveD(this,TktBookS,SOMObject,somFree)
	(this);
}


/* method: somUninit */
void   somUninit()
{
   SOM_ResolveD(this,TktBookS,SOMObject,somUninit)
	(this);
}


/* method: somGetClass */
SOMClass*   somGetClass()
{
   return SOM_ResolveD(this,TktBookS,SOMObject,somGetClass)
	(this);
}


/* method: somGetClassName */
string   somGetClassName()
{
   return SOM_ResolveD(this,TktBookS,SOMObject,somGetClassName)
	(this);
}


/* method: somGetSize */
long   somGetSize()
{
   return SOM_ResolveD(this,TktBookS,SOMObject,somGetSize)
	(this);
}


/* method: somIsA */
boolean   somIsA(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,TktBookS,SOMObject,somIsA)
	(this,aClassObj);
}


/* method: somIsInstanceOf */
boolean   somIsInstanceOf(SOMClass* aClassObj)
{
   return SOM_ResolveD(this,TktBookS,SOMObject,somIsInstanceOf)
	(this,aClassObj);
}


/* method: somRespondsTo */
boolean   somRespondsTo(somId mId)
{
   return SOM_ResolveD(this,TktBookS,SOMObject,somRespondsTo)
	(this,mId);
}


/* va_list method: somDispatch */
/* the va_list invocation form */
boolean   TktBookS_somDispatch(somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,TktBookS,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somDispatch(somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,TktBookS,SOMObject,somDispatch)
	(this,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somClassDispatch */
/* the va_list invocation form */
boolean   TktBookS_somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		va_list ap)
{
return SOM_ResolveD(this,TktBookS,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
}

/* the varargs invocation form */
boolean   somClassDispatch(SOMClass* clsObj,
		somToken* retValue,
		somId methodId,
		...)
{
   va_list ap;
   va_start(ap, methodId);
   boolean __somResult = 
      SOM_ResolveD(this,TktBookS,SOMObject,somClassDispatch)
	(this,clsObj,retValue,methodId,ap);
   va_end(ap);
   return __somResult;
}


/* method: somCastObj */
boolean   somCastObj(SOMClass* cls)
{
   return SOM_ResolveD(this,TktBookS,SOMObject,somCastObj)
	(this,cls);
}


/* method: somResetObj */
boolean   somResetObj()
{
   return SOM_ResolveD(this,TktBookS,SOMObject,somResetObj)
	(this);
}


/* va_list method: somDispatchV */
/* the va_list invocation form */
void   TktBookS_somDispatchV(somId methodId,
		somId descriptor,
		va_list ap)
{
   SOM_ResolveD(this,TktBookS,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void   somDispatchV(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   SOM_ResolveD(this,TktBookS,SOMObject,somDispatchV)
	(this,methodId,descriptor,ap);
   va_end(ap);
}


/* va_list method: somDispatchL */
/* the va_list invocation form */
long   TktBookS_somDispatchL(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,TktBookS,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
long   somDispatchL(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   long __somResult = 
      SOM_ResolveD(this,TktBookS,SOMObject,somDispatchL)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchA */
/* the va_list invocation form */
void*   TktBookS_somDispatchA(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,TktBookS,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
void*   somDispatchA(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   void* __somResult = 
      SOM_ResolveD(this,TktBookS,SOMObject,somDispatchA)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* va_list method: somDispatchD */
/* the va_list invocation form */
double   TktBookS_somDispatchD(somId methodId,
		somId descriptor,
		va_list ap)
{
return SOM_ResolveD(this,TktBookS,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
}

/* the varargs invocation form */
double   somDispatchD(somId methodId,
		somId descriptor,
		...)
{
   va_list ap;
   va_start(ap, descriptor);
   double __somResult = 
      SOM_ResolveD(this,TktBookS,SOMObject,somDispatchD)
	(this,methodId,descriptor,ap);
   va_end(ap);
   return __somResult;
}


/* method: somPrintSelf */
SOMObject*   somPrintSelf()
{
   return SOM_ResolveD(this,TktBookS,SOMObject,somPrintSelf)
	(this);
}


/* method: somDumpSelf */
void   somDumpSelf(long level)
{
   SOM_ResolveD(this,TktBookS,SOMObject,somDumpSelf)
	(this,level);
}


/* method: somDumpSelfInt */
void   somDumpSelfInt(long level)
{
   SOM_ResolveD(this,TktBookS,SOMObject,somDumpSelfInt)
	(this,level);
}



};   /* TktBookS */



#endif       /* SOM_TktBookS_xh */
